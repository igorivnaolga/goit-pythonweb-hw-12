services:
  postgres_db:
    image: postgres:17-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - .:/src
    restart: always
    env_file:
      - .env
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
  app:
    build: .
    container_name: app
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: postgres_db
      JWT_SECRET: ${JWT_SECRET}
      JWT_ALGORITHM: ${JWT_ALGORITHM}
      JWT_EXPIRATION_SECONDS: ${JWT_EXPIRATION_SECONDS}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_SERVER: ${MAIL_SERVER}
      MAIL_FROM_NAME: ${MAIL_FROM_NAME}
      MAIL_STARTTLS: ${MAIL_STARTTLS}
      MAIL_SSL_TLS: ${MAIL_SSL_TLS}
      MAIL_USE_CREDENTIALS: ${MAIL_USE_CREDENTIALS}
      MAIL_VALIDATE_CERTS: ${MAIL_VALIDATE_CERTS}
      CLOUDINARY_NAME: ${CLOUDINARY_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}

    ports:
      - '3000:3000'
    depends_on:
      - postgres_db
      - redis
    env_file:
      - .env

volumes:
  postgres_data:
